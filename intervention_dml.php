<?php

// Data functions (insert, update, delete, form) for table intervention

// This script and data application were generated by AppGini 5.82
// Download AppGini for free from https://bigprof.com/appgini/download/

function intervention_insert() {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('intervention');
	if(!$arrPerm[1]) return false;

	$data = array();
	$data['demande_par'] = $_REQUEST['demande_par'];
		if($data['demande_par'] == empty_lookup_value) { $data['demande_par'] = ''; }
	$data['date_demande'] = mysql_datetime($_REQUEST['date_demande']);
		if($data['date_demande'] == empty_lookup_value) { $data['date_demande'] = ''; }
	$data['realise_par'] = $_REQUEST['realise_par'];
		if($data['realise_par'] == empty_lookup_value) { $data['realise_par'] = ''; }
	$data['date_realisation'] = mysql_datetime($_REQUEST['date_realisation']);
		if($data['date_realisation'] == empty_lookup_value) { $data['date_realisation'] = ''; }
	$data['pour_site'] = $_REQUEST['pour_site'];
		if($data['pour_site'] == empty_lookup_value) { $data['pour_site'] = ''; }
	$data['pour_bac'] = $_REQUEST['pour_bac'];
		if($data['pour_bac'] == empty_lookup_value) { $data['pour_bac'] = ''; }
	$data['type_intervention'] = $_REQUEST['type_intervention'];
		if($data['type_intervention'] == empty_lookup_value) { $data['type_intervention'] = ''; }
	$data['statut_intervention'] = $_REQUEST['statut_intervention'];
		if($data['statut_intervention'] == empty_lookup_value) { $data['statut_intervention'] = ''; }
	$data['description'] = $_REQUEST['description'];
		if($data['description'] == empty_lookup_value) { $data['description'] = ''; }
	$data['cree_par'] = parseCode('<%%creatorUsername%%>', true);
	if($data['type_intervention'] == '') $data['type_intervention'] = "Transfert";
	if($data['type_intervention']== '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Type intervention': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['statut_intervention'] == '') $data['statut_intervention'] = "En attente";
	if($data['statut_intervention']== '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Statut intervention': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}

	// hook: intervention_before_insert
	if(function_exists('intervention_before_insert')) {
		$args = array();
		if(!intervention_before_insert($data, getMemberInfo(), $args)) { return false; }
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('intervention', backtick_keys_once($data), $error);
	if($error)
		die("{$error}<br><a href=\"#\" onclick=\"history.go(-1);\">{$Translation['< back']}</a>");

	$recID = db_insert_id(db_link());

	// hook: intervention_after_insert
	if(function_exists('intervention_after_insert')) {
		$res = sql("select * from `intervention` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!intervention_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('intervention', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(!empty($_REQUEST['SelectedID'])) intervention_copy_children($recID, $_REQUEST['SelectedID']);

	return $recID;
}

function intervention_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = array(); // array of curl handlers for launching insert requests
	$eo = array('silentErrors' => true);
	$uploads_dir = realpath(dirname(__FILE__) . '/../' . $Translation['ImageFolder']);
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function intervention_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('intervention');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='intervention' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='intervention' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: intervention_before_delete
	if(function_exists('intervention_before_delete')) {
		$args=array();
		if(!intervention_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `intervention` where `id`='$selected_id'", $eo);

	// hook: intervention_after_delete
	if(function_exists('intervention_after_delete')) {
		$args=array();
		intervention_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='intervention' and pkValue='$selected_id'", $eo);
}

function intervention_update($selected_id) {
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('intervention');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='intervention' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='intervention' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3) { // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['demande_par'] = makeSafe($_REQUEST['demande_par']);
		if($data['demande_par'] == empty_lookup_value) { $data['demande_par'] = ''; }
	$data['date_demande'] = mysql_datetime($_REQUEST['date_demande']);
		if($data['date_demande'] == empty_lookup_value) { $data['date_demande'] = ''; }
	$data['realise_par'] = makeSafe($_REQUEST['realise_par']);
		if($data['realise_par'] == empty_lookup_value) { $data['realise_par'] = ''; }
	$data['date_realisation'] = mysql_datetime($_REQUEST['date_realisation']);
		if($data['date_realisation'] == empty_lookup_value) { $data['date_realisation'] = ''; }
	$data['pour_site'] = makeSafe($_REQUEST['pour_site']);
		if($data['pour_site'] == empty_lookup_value) { $data['pour_site'] = ''; }
	$data['pour_bac'] = makeSafe($_REQUEST['pour_bac']);
		if($data['pour_bac'] == empty_lookup_value) { $data['pour_bac'] = ''; }
	$data['type_intervention'] = makeSafe($_REQUEST['type_intervention']);
		if($data['type_intervention'] == empty_lookup_value) { $data['type_intervention'] = ''; }
	if($data['type_intervention']=='') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Type intervention': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['statut_intervention'] = makeSafe($_REQUEST['statut_intervention']);
		if($data['statut_intervention'] == empty_lookup_value) { $data['statut_intervention'] = ''; }
	if($data['statut_intervention']=='') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Statut intervention': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['description'] = makeSafe($_REQUEST['description']);
		if($data['description'] == empty_lookup_value) { $data['description'] = ''; }
	$data['date_maj'] = parseCode('<%%editingTimestamp%%>', false, true);
	$data['selectedID'] = makeSafe($selected_id);

	// hook: intervention_before_update
	if(function_exists('intervention_before_update')) {
		$args = array();
		if(!intervention_before_update($data, getMemberInfo(), $args)) { return false; }
	}

	$o = array('silentErrors' => true);
	sql('update `intervention` set       `demande_par`=' . (($data['demande_par'] !== '' && $data['demande_par'] !== NULL) ? "'{$data['demande_par']}'" : 'NULL') . ', `date_demande`=' . (($data['date_demande'] !== '' && $data['date_demande'] !== NULL) ? "'{$data['date_demande']}'" : 'NULL') . ', `realise_par`=' . (($data['realise_par'] !== '' && $data['realise_par'] !== NULL) ? "'{$data['realise_par']}'" : 'NULL') . ', `date_realisation`=' . (($data['date_realisation'] !== '' && $data['date_realisation'] !== NULL) ? "'{$data['date_realisation']}'" : 'NULL') . ', `pour_site`=' . (($data['pour_site'] !== '' && $data['pour_site'] !== NULL) ? "'{$data['pour_site']}'" : 'NULL') . ', `pour_bac`=' . (($data['pour_bac'] !== '' && $data['pour_bac'] !== NULL) ? "'{$data['pour_bac']}'" : 'NULL') . ', `type_intervention`=' . (($data['type_intervention'] !== '' && $data['type_intervention'] !== NULL) ? "'{$data['type_intervention']}'" : 'NULL') . ', `statut_intervention`=' . (($data['statut_intervention'] !== '' && $data['statut_intervention'] !== NULL) ? "'{$data['statut_intervention']}'" : 'NULL') . ', `description`=' . (($data['description'] !== '' && $data['description'] !== NULL) ? "'{$data['description']}'" : 'NULL') . ', `date_maj`=' . "'{$data['date_maj']}'" . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!='') {
		echo $o['error'];
		echo '<a href="intervention_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: intervention_after_update
	if(function_exists('intervention_after_update')) {
		$res = sql("SELECT * FROM `intervention` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!intervention_after_update($data, getMemberInfo(), $args)) { return; }
	}

	// mm: update ownership data
	sql("update `membership_userrecords` set `dateUpdated`='" . time() . "' where `tableName`='intervention' and `pkValue`='" . makeSafe($selected_id) . "'", $eo);

}

function intervention_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('intervention');
	if(!$arrPerm[1] && $selected_id=='') { return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != '') {
		$dvprint = true;
	}

	$filterer_demande_par = thisOr(undo_magic_quotes($_REQUEST['filterer_demande_par']), '');
	$filterer_realise_par = thisOr(undo_magic_quotes($_REQUEST['filterer_realise_par']), '');
	$filterer_pour_site = thisOr(undo_magic_quotes($_REQUEST['filterer_pour_site']), '');
	$filterer_pour_bac = thisOr(undo_magic_quotes($_REQUEST['filterer_pour_bac']), '');

	// populate filterers, starting from children to grand-parents
	if($filterer_pour_bac && !$filterer_pour_site) $filterer_pour_site = sqlValue("select appartient_site from bacs_du_site where id='" . makeSafe($filterer_pour_bac) . "'");

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: demande_par
	$combo_demande_par = new DataCombo;
	// combobox: realise_par
	$combo_realise_par = new DataCombo;
	// combobox: pour_site
	$combo_pour_site = new DataCombo;
	// combobox: pour_bac, filterable by: pour_site
	$combo_pour_bac = new DataCombo;
	// combobox: type_intervention
	$combo_type_intervention = new Combo;
	$combo_type_intervention->ListType = 0;
	$combo_type_intervention->MultipleSeparator = ', ';
	$combo_type_intervention->ListBoxHeight = 10;
	$combo_type_intervention->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/intervention.type_intervention.csv')) {
		$type_intervention_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/intervention.type_intervention.csv')));
		$combo_type_intervention->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($type_intervention_data)));
		$combo_type_intervention->ListData = $combo_type_intervention->ListItem;
	}else{
		$combo_type_intervention->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Transfert;;d&#233;ratisation;;autres")));
		$combo_type_intervention->ListData = $combo_type_intervention->ListItem;
	}
	$combo_type_intervention->SelectName = 'type_intervention';
	$combo_type_intervention->AllowNull = false;
	// combobox: statut_intervention
	$combo_statut_intervention = new Combo;
	$combo_statut_intervention->ListType = 0;
	$combo_statut_intervention->MultipleSeparator = ', ';
	$combo_statut_intervention->ListBoxHeight = 10;
	$combo_statut_intervention->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/intervention.statut_intervention.csv')) {
		$statut_intervention_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/intervention.statut_intervention.csv')));
		$combo_statut_intervention->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($statut_intervention_data)));
		$combo_statut_intervention->ListData = $combo_statut_intervention->ListItem;
	}else{
		$combo_statut_intervention->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("En attente;;Pris en compte;;En cours;;Termin&#233;")));
		$combo_statut_intervention->ListData = $combo_statut_intervention->ListItem;
	}
	$combo_statut_intervention->SelectName = 'statut_intervention';
	$combo_statut_intervention->AllowNull = false;

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm[2]) {
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='intervention' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='intervention' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID) {
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID) {
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3) {
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("SELECT * FROM `intervention` WHERE `id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'intervention_view.php', false);
		}
		$combo_demande_par->SelectedData = $row['demande_par'];
		$combo_realise_par->SelectedData = $row['realise_par'];
		$combo_pour_site->SelectedData = $row['pour_site'];
		$combo_pour_bac->SelectedData = $row['pour_bac'];
		$combo_type_intervention->SelectedData = $row['type_intervention'];
		$combo_statut_intervention->SelectedData = $row['statut_intervention'];
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
	} else {
		$combo_demande_par->SelectedData = $filterer_demande_par;
		$combo_realise_par->SelectedData = $filterer_realise_par;
		$combo_pour_site->SelectedData = $filterer_pour_site;
		$combo_pour_bac->SelectedData = $filterer_pour_bac;
		$combo_type_intervention->SelectedText = ( $_REQUEST['FilterField'][1]=='8' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "Transfert");
		$combo_statut_intervention->SelectedText = ( $_REQUEST['FilterField'][1]=='9' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "En attente");
	}
	$combo_demande_par->HTML = '<span id="demande_par-container' . $rnd1 . '"></span><input type="hidden" name="demande_par" id="demande_par' . $rnd1 . '" value="' . html_attr($combo_demande_par->SelectedData) . '">';
	$combo_demande_par->MatchText = '<span id="demande_par-container-readonly' . $rnd1 . '"></span><input type="hidden" name="demande_par" id="demande_par' . $rnd1 . '" value="' . html_attr($combo_demande_par->SelectedData) . '">';
	$combo_realise_par->HTML = '<span id="realise_par-container' . $rnd1 . '"></span><input type="hidden" name="realise_par" id="realise_par' . $rnd1 . '" value="' . html_attr($combo_realise_par->SelectedData) . '">';
	$combo_realise_par->MatchText = '<span id="realise_par-container-readonly' . $rnd1 . '"></span><input type="hidden" name="realise_par" id="realise_par' . $rnd1 . '" value="' . html_attr($combo_realise_par->SelectedData) . '">';
	$combo_pour_site->HTML = '<span id="pour_site-container' . $rnd1 . '"></span><input type="hidden" name="pour_site" id="pour_site' . $rnd1 . '" value="' . html_attr($combo_pour_site->SelectedData) . '">';
	$combo_pour_site->MatchText = '<span id="pour_site-container-readonly' . $rnd1 . '"></span><input type="hidden" name="pour_site" id="pour_site' . $rnd1 . '" value="' . html_attr($combo_pour_site->SelectedData) . '">';
	$combo_pour_bac->HTML = '<span id="pour_bac-container' . $rnd1 . '"></span><input type="hidden" name="pour_bac" id="pour_bac' . $rnd1 . '" value="' . html_attr($combo_pour_bac->SelectedData) . '">';
	$combo_pour_bac->MatchText = '<span id="pour_bac-container-readonly' . $rnd1 . '"></span><input type="hidden" name="pour_bac" id="pour_bac' . $rnd1 . '" value="' . html_attr($combo_pour_bac->SelectedData) . '">';
	$combo_type_intervention->Render();
	$combo_statut_intervention->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_demande_par__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['demande_par'] : $filterer_demande_par); ?>"};
		AppGini.current_realise_par__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['realise_par'] : $filterer_realise_par); ?>"};
		AppGini.current_pour_site__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['pour_site'] : $filterer_pour_site); ?>"};
		AppGini.current_pour_bac__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['pour_bac'] : $filterer_pour_bac); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(demande_par_reload__RAND__) == 'function') demande_par_reload__RAND__();
				if(typeof(realise_par_reload__RAND__) == 'function') realise_par_reload__RAND__();
				if(typeof(pour_site_reload__RAND__) == 'function') pour_site_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(pour_bac_reload__RAND__) == \'function\') pour_bac_reload__RAND__(AppGini.current_pour_site__RAND__.value);' : ''); ?>
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function demande_par_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#demande_par-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_demande_par__RAND__.value, t: 'intervention', f: 'demande_par' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="demande_par"]').val(resp.results[0].id);
							$j('[id=demande_par-container-readonly__RAND__]').html('<span id="demande_par-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=membres_view_parent]').hide(); }else{ $j('.btn[id=membres_view_parent]').show(); }


							if(typeof(demande_par_update_autofills__RAND__) == 'function') demande_par_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { /* */ return { s: term, p: page, t: 'intervention', f: 'demande_par' }; },
					results: function(resp, page) { /* */ return resp; }
				},
				escapeMarkup: function(str) { /* */ return str; }
			}).on('change', function(e) {
				AppGini.current_demande_par__RAND__.value = e.added.id;
				AppGini.current_demande_par__RAND__.text = e.added.text;
				$j('[name="demande_par"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=membres_view_parent]').hide(); }else{ $j('.btn[id=membres_view_parent]').show(); }


				if(typeof(demande_par_update_autofills__RAND__) == 'function') demande_par_update_autofills__RAND__();
			});

			if(!$j("#demande_par-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_demande_par__RAND__.value, t: 'intervention', f: 'demande_par' },
					success: function(resp) {
						$j('[name="demande_par"]').val(resp.results[0].id);
						$j('[id=demande_par-container-readonly__RAND__]').html('<span id="demande_par-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=membres_view_parent]').hide(); }else{ $j('.btn[id=membres_view_parent]').show(); }

						if(typeof(demande_par_update_autofills__RAND__) == 'function') demande_par_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_demande_par__RAND__.value, t: 'intervention', f: 'demande_par' },
				success: function(resp) {
					$j('[id=demande_par-container__RAND__], [id=demande_par-container-readonly__RAND__]').html('<span id="demande_par-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=membres_view_parent]').hide(); }else{ $j('.btn[id=membres_view_parent]').show(); }

					if(typeof(demande_par_update_autofills__RAND__) == 'function') demande_par_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function realise_par_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#realise_par-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_realise_par__RAND__.value, t: 'intervention', f: 'realise_par' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="realise_par"]').val(resp.results[0].id);
							$j('[id=realise_par-container-readonly__RAND__]').html('<span id="realise_par-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=membres_view_parent]').hide(); }else{ $j('.btn[id=membres_view_parent]').show(); }


							if(typeof(realise_par_update_autofills__RAND__) == 'function') realise_par_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { /* */ return { s: term, p: page, t: 'intervention', f: 'realise_par' }; },
					results: function(resp, page) { /* */ return resp; }
				},
				escapeMarkup: function(str) { /* */ return str; }
			}).on('change', function(e) {
				AppGini.current_realise_par__RAND__.value = e.added.id;
				AppGini.current_realise_par__RAND__.text = e.added.text;
				$j('[name="realise_par"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=membres_view_parent]').hide(); }else{ $j('.btn[id=membres_view_parent]').show(); }


				if(typeof(realise_par_update_autofills__RAND__) == 'function') realise_par_update_autofills__RAND__();
			});

			if(!$j("#realise_par-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_realise_par__RAND__.value, t: 'intervention', f: 'realise_par' },
					success: function(resp) {
						$j('[name="realise_par"]').val(resp.results[0].id);
						$j('[id=realise_par-container-readonly__RAND__]').html('<span id="realise_par-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=membres_view_parent]').hide(); }else{ $j('.btn[id=membres_view_parent]').show(); }

						if(typeof(realise_par_update_autofills__RAND__) == 'function') realise_par_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_realise_par__RAND__.value, t: 'intervention', f: 'realise_par' },
				success: function(resp) {
					$j('[id=realise_par-container__RAND__], [id=realise_par-container-readonly__RAND__]').html('<span id="realise_par-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=membres_view_parent]').hide(); }else{ $j('.btn[id=membres_view_parent]').show(); }

					if(typeof(realise_par_update_autofills__RAND__) == 'function') realise_par_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function pour_site_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#pour_site-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_pour_site__RAND__.value, t: 'intervention', f: 'pour_site' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="pour_site"]').val(resp.results[0].id);
							$j('[id=pour_site-container-readonly__RAND__]').html('<span id="pour_site-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=site_compostage_view_parent]').hide(); }else{ $j('.btn[id=site_compostage_view_parent]').show(); }

						if(typeof(pour_bac_reload__RAND__) == 'function') pour_bac_reload__RAND__(AppGini.current_pour_site__RAND__.value);

							if(typeof(pour_site_update_autofills__RAND__) == 'function') pour_site_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { /* */ return { s: term, p: page, t: 'intervention', f: 'pour_site' }; },
					results: function(resp, page) { /* */ return resp; }
				},
				escapeMarkup: function(str) { /* */ return str; }
			}).on('change', function(e) {
				AppGini.current_pour_site__RAND__.value = e.added.id;
				AppGini.current_pour_site__RAND__.text = e.added.text;
				$j('[name="pour_site"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=site_compostage_view_parent]').hide(); }else{ $j('.btn[id=site_compostage_view_parent]').show(); }

						if(typeof(pour_bac_reload__RAND__) == 'function') pour_bac_reload__RAND__(AppGini.current_pour_site__RAND__.value);

				if(typeof(pour_site_update_autofills__RAND__) == 'function') pour_site_update_autofills__RAND__();
			});

			if(!$j("#pour_site-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_pour_site__RAND__.value, t: 'intervention', f: 'pour_site' },
					success: function(resp) {
						$j('[name="pour_site"]').val(resp.results[0].id);
						$j('[id=pour_site-container-readonly__RAND__]').html('<span id="pour_site-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=site_compostage_view_parent]').hide(); }else{ $j('.btn[id=site_compostage_view_parent]').show(); }

						if(typeof(pour_site_update_autofills__RAND__) == 'function') pour_site_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_pour_site__RAND__.value, t: 'intervention', f: 'pour_site' },
				success: function(resp) {
					$j('[id=pour_site-container__RAND__], [id=pour_site-container-readonly__RAND__]').html('<span id="pour_site-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=site_compostage_view_parent]').hide(); }else{ $j('.btn[id=site_compostage_view_parent]').show(); }

					if(typeof(pour_site_update_autofills__RAND__) == 'function') pour_site_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function pour_bac_reload__RAND__(filterer_pour_site) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#pour_bac-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_pour_site: filterer_pour_site, id: AppGini.current_pour_bac__RAND__.value, t: 'intervention', f: 'pour_bac' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="pour_bac"]').val(resp.results[0].id);
							$j('[id=pour_bac-container-readonly__RAND__]').html('<span id="pour_bac-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bacs_du_site_view_parent]').hide(); }else{ $j('.btn[id=bacs_du_site_view_parent]').show(); }


							if(typeof(pour_bac_update_autofills__RAND__) == 'function') pour_bac_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { /* */ return { filterer_pour_site: filterer_pour_site, s: term, p: page, t: 'intervention', f: 'pour_bac' }; },
					results: function(resp, page) { /* */ return resp; }
				},
				escapeMarkup: function(str) { /* */ return str; }
			}).on('change', function(e) {
				AppGini.current_pour_bac__RAND__.value = e.added.id;
				AppGini.current_pour_bac__RAND__.text = e.added.text;
				$j('[name="pour_bac"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bacs_du_site_view_parent]').hide(); }else{ $j('.btn[id=bacs_du_site_view_parent]').show(); }


				if(typeof(pour_bac_update_autofills__RAND__) == 'function') pour_bac_update_autofills__RAND__();
			});

			if(!$j("#pour_bac-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_pour_bac__RAND__.value, t: 'intervention', f: 'pour_bac' },
					success: function(resp) {
						$j('[name="pour_bac"]').val(resp.results[0].id);
						$j('[id=pour_bac-container-readonly__RAND__]').html('<span id="pour_bac-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bacs_du_site_view_parent]').hide(); }else{ $j('.btn[id=bacs_du_site_view_parent]').show(); }

						if(typeof(pour_bac_update_autofills__RAND__) == 'function') pour_bac_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_pour_bac__RAND__.value, t: 'intervention', f: 'pour_bac' },
				success: function(resp) {
					$j('[id=pour_bac-container__RAND__], [id=pour_bac-container-readonly__RAND__]').html('<span id="pour_bac-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bacs_du_site_view_parent]').hide(); }else{ $j('.btn[id=bacs_du_site_view_parent]').show(); }

					if(typeof(pour_bac_update_autofills__RAND__) == 'function') pour_bac_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/intervention_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/intervention_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Intervention details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert) {
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return intervention_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return intervention_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return intervention_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly .= "\tjQuery('#demande_par').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#demande_par_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#date_demande').parents('.input-group').replaceWith('<div class=\"form-control-static\" id=\"date_demande\">' + (jQuery('#date_demande').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#realise_par').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#realise_par_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#date_realisation').parents('.input-group').replaceWith('<div class=\"form-control-static\" id=\"date_realisation\">' + (jQuery('#date_realisation').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#pour_site').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#pour_site_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#pour_bac').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#pour_bac_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#type_intervention').replaceWith('<div class=\"form-control-static\" id=\"type_intervention\">' + (jQuery('#type_intervention').val() || '') + '</div>'); jQuery('#type_intervention-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#statut_intervention').replaceWith('<div class=\"form-control-static\" id=\"statut_intervention\">' + (jQuery('#statut_intervention').val() || '') + '</div>'); jQuery('#statut_intervention-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert) {
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$locale = isset($Translation['datetimepicker locale']) ? ", locale: '{$Translation['datetimepicker locale']}'" : '';
		$jsEditable .= "\tjQuery('#date_demande').addClass('always_shown').parents('.input-group').datetimepicker({ toolbarPlacement: 'top', sideBySide: true, showClear: true, showTodayButton: true, showClose: true, icons: { close: 'glyphicon glyphicon-ok' }, format: AppGini.datetimeFormat('dt') {$locale} });";
		$locale = isset($Translation['datetimepicker locale']) ? ", locale: '{$Translation['datetimepicker locale']}'" : '';
		$jsEditable .= "\tjQuery('#date_realisation').addClass('always_shown').parents('.input-group').datetimepicker({ toolbarPlacement: 'top', sideBySide: true, showClear: true, showTodayButton: true, showClose: true, icons: { close: 'glyphicon glyphicon-ok' }, format: AppGini.datetimeFormat('dt') {$locale} });";
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(demande_par)%%>', $combo_demande_par->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(demande_par)%%>', $combo_demande_par->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(demande_par)%%>', urlencode($combo_demande_par->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(realise_par)%%>', $combo_realise_par->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(realise_par)%%>', $combo_realise_par->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(realise_par)%%>', urlencode($combo_realise_par->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(pour_site)%%>', $combo_pour_site->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(pour_site)%%>', $combo_pour_site->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(pour_site)%%>', urlencode($combo_pour_site->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(pour_bac)%%>', $combo_pour_bac->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(pour_bac)%%>', $combo_pour_bac->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(pour_bac)%%>', urlencode($combo_pour_bac->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(type_intervention)%%>', $combo_type_intervention->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(type_intervention)%%>', $combo_type_intervention->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(statut_intervention)%%>', $combo_statut_intervention->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(statut_intervention)%%>', $combo_statut_intervention->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array('demande_par' => array('membres', 'Demande par'), 'realise_par' => array('membres', 'Realise par'), 'pour_site' => array('site_compostage', 'Pour site'), 'pour_bac' => array('bacs_du_site', 'Pour bac'), );
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(demande_par)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date_demande)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(realise_par)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date_realisation)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(pour_site)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(pour_bac)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(type_intervention)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(statut_intervention)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(description)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cree_par)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date_maj)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(demande_par)%%>', safe_html($urow['demande_par']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(demande_par)%%>', html_attr($row['demande_par']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(demande_par)%%>', urlencode($urow['demande_par']), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_demande)%%>', app_datetime($row['date_demande'], 'dt'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_demande)%%>', urlencode(app_datetime($urow['date_demande'], 'dt')), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(realise_par)%%>', safe_html($urow['realise_par']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(realise_par)%%>', html_attr($row['realise_par']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(realise_par)%%>', urlencode($urow['realise_par']), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_realisation)%%>', app_datetime($row['date_realisation'], 'dt'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_realisation)%%>', urlencode(app_datetime($urow['date_realisation'], 'dt')), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(pour_site)%%>', safe_html($urow['pour_site']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(pour_site)%%>', html_attr($row['pour_site']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(pour_site)%%>', urlencode($urow['pour_site']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(pour_bac)%%>', safe_html($urow['pour_bac']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(pour_bac)%%>', html_attr($row['pour_bac']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(pour_bac)%%>', urlencode($urow['pour_bac']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(type_intervention)%%>', safe_html($urow['type_intervention']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(type_intervention)%%>', html_attr($row['type_intervention']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(type_intervention)%%>', urlencode($urow['type_intervention']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(statut_intervention)%%>', safe_html($urow['statut_intervention']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(statut_intervention)%%>', html_attr($row['statut_intervention']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(statut_intervention)%%>', urlencode($urow['statut_intervention']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(description)%%>', '<textarea name="description" id="description" rows="5">' . html_attr($row['description']) . '</textarea>', $templateCode);
		}else{
			$templateCode = str_replace('<%%HTMLAREA(description)%%>', '<div id="description" class="form-control-static">' . $row['description'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(description)%%>', nl2br($row['description']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(description)%%>', urlencode($urow['description']), $templateCode);
		$templateCode = str_replace('<%%VALUE(cree_par)%%>', safe_html($urow['cree_par']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cree_par)%%>', urlencode($urow['cree_par']), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_maj)%%>', safe_html($urow['date_maj']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_maj)%%>', urlencode($urow['date_maj']), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(demande_par)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(demande_par)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_demande)%%>', '<%%creationDateTime%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_demande)%%>', urlencode('<%%creationDateTime%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(realise_par)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(realise_par)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_realisation)%%>', '<%%editingDateTime%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_realisation)%%>', urlencode('<%%editingDateTime%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(pour_site)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(pour_site)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(pour_bac)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(pour_bac)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(type_intervention)%%>', 'Transfert', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(type_intervention)%%>', urlencode('Transfert'), $templateCode);
		$templateCode = str_replace('<%%VALUE(statut_intervention)%%>', 'En attente', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(statut_intervention)%%>', urlencode('En attente'), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(description)%%>', '<textarea name="description" id="description" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(cree_par)%%>', '<%%creatorUsername%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cree_par)%%>', urlencode('<%%creatorUsername%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_maj)%%>', '<%%editingTimestamp%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_maj)%%>', urlencode('<%%editingTimestamp%%>'), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans) {
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('intervention');
	if($selected_id) {
		$jdata = get_joined_record('intervention', $selected_id);
		if($jdata === false) $jdata = get_defaults('intervention');
		$rdata = $row;
	}
	$templateCode .= loadView('intervention-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: intervention_dv
	if(function_exists('intervention_dv')) {
		$args=array();
		intervention_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>